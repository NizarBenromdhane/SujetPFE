@model List<SujetPFE.Domain.Entities.CreditObjectif>

@{
    ViewData["Title"] = "Saisie Crédit Multiple";
    var periodes = new List<SelectListItem>
    {
        new SelectListItem { Value = "2025-03", Text = "Mars 2025" },
        new SelectListItem { Value = "2025-06", Text = "Juin 2025" },
        new SelectListItem { Value = "2025-09", Text = "Septembre 2025" },
        new SelectListItem { Value = "2025-12", Text = "Décembre 2025" }
    };
    var typesCredit = new List<SelectListItem>
    {
        new SelectListItem { Value = "Immobilier", Text = "Crédit Immobilier" },
        new SelectListItem { Value = "Consommation", Text = "Crédit à la Consommation" },
        new SelectListItem { Value = "Entreprise", Text = "Crédit aux Entreprises" }
    };
    var employesSelectList = ViewBag.Employes as List<SelectListItem>;
    var groupesSelectList = ViewBag.Groupes as List<SelectListItem>;
}

<div class="saisie-credit-container biat-theme full-width-container">
    <h1 class="form-title">Saisie Multiple Objectifs Solde Crédits</h1>
    <h2 class="form-subtitle">Saisie des Objectifs de Crédit</h2>

    @if (ViewBag.Message != null)
    {
        <div class="alert @(ViewBag.IsSuccess ? "alert-success" : "alert-danger")">
            @ViewBag.Message
        </div>
    }

    <form method="post">
        <div id="objectifs-container">
        </div>

        <button type="button" id="ajouter-objectif" class="btn btn-add mt-3"><i class="fas fa-plus-circle"></i> Ajouter un Objectif</button>

        <div class="form-group text-center mt-4">
            <button type="submit" class="btn btn-primary btn-lg"><i class="fas fa-save"></i> Enregistrer les Objectifs</button>
        </div>
    </form>
</div>

<style>
    /* Styles CSS pour l'agencement en blocs */
    .objectif-bloc {
        background-color: white;
        padding: 20px;
        margin-bottom: 15px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        border: 1px solid #eee;
    }

        .objectif-bloc h3 {
            font-size: 1.2em;
            margin-top: 0;
            margin-bottom: 15px;
            color: var(--biat-blue-dark);
        }

    .form-group-inline {
        display: flex;
        gap: 15px;
        margin-bottom: 15px;
        align-items: center; /* Aligner verticalement les éléments */
    }

        .form-group-inline > div {
            flex-grow: 1; /* Distribuer l'espace entre les éléments */
        }

    .remove-objectif-btn {
        margin-top: 10px;
    }

    /* Styles CSS améliorés et professionnels - BIAT Theme (Adapté pour les blocs) */
    .biat-theme {
        --biat-blue-dark: #003377; /* Bleu foncé BIAT */
        --biat-green-dark: #00803E; /* Vert foncé BIAT */
        --biat-secondary-bg: #F8F9FA; /* Gris très clair pour l'arrière-plan */
        --biat-text-color: #333;
        --biat-border-color: #D3D3D3; /* Gris clair pour les bordures */
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: var(--biat-text-color);
    }

    .full-width-container {
        width: 95%; /* Légèrement réduit pour un peu de marge latérale */
        margin: 20px auto;
        padding: 30px;
        background-color: var(--biat-secondary-bg); /* Utilisation du gris clair */
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
    }

    .form-title {
        color: var(--biat-blue-dark); /* Bleu foncé pour le titre */
        margin-bottom: 25px;
        font-size: 2.2em; /* Taille de titre un peu plus modérée */
        text-align: center;
        font-weight: bold;
    }

    .form-subtitle {
        color: #6c757d; /* Gris un peu plus foncé pour le sous-titre */
        margin-bottom: 20px;
        font-size: 1.1em;
        text-align: center;
        font-weight: normal;
    }

    #objectifs-container {
        margin-bottom: 20px;
    }

    .objectif-bloc {
        background-color: white;
        padding: 25px;
        margin-bottom: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);
        border: 1px solid var(--biat-border-color); /* Utilisation de la couleur de bordure BIAT */
    }

        .objectif-bloc h3 {
            font-size: 1.3em;
            margin-top: 0;
            margin-bottom: 20px;
            color: var(--biat-green-dark); /* Vert foncé pour le titre du bloc */
            border-bottom: 2px solid var(--biat-green-dark); /* Ligne de séparation verte */
            padding-bottom: 10px;
        }

    .form-group {
        margin-bottom: 18px;
    }

        .form-group label {
            display: block;
            font-size: 0.95em;
            color: #495057; /* Couleur de texte standard pour les labels */
            margin-bottom: 5px;
            font-weight: bold;
        }

    .form-control {
        display: block;
        width: calc(100% - 22px);
        padding: 10px;
        font-size: 1em;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: 6px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .form-control:focus {
            color: #495057;
            background-color: #fff;
            border-color: var(--biat-blue-dark); /* Bleu foncé au focus */
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(0, 51, 119, 0.25); /* Ombre de focus bleue */
        }

    select.form-control {
        height: auto; /* Ajuster la hauteur automatiquement */
    }

    .remove-objectif-btn {
        background-color: #dc3545; /* Rouge standard pour la suppression */
        color: white;
        border: none;
        border-radius: 6px;
        padding: 8px 15px;
        font-size: 0.9em;
        cursor: pointer;
        transition: background-color 0.15s ease-in-out;
        margin-top: 15px;
    }

        .remove-objectif-btn:hover {
            background-color: #c82333;
        }

    .btn-add {
        background-color: var(--biat-green-dark); /* Vert foncé pour le bouton Ajouter */
        color: white;
        border: none;
        border-radius: 6px;
        padding: 12px 20px;
        font-size: 1em;
        cursor: pointer;
        transition: background-color 0.15s ease-in-out;
        width: auto; /* Ajuster la largeur au contenu */
        display: block;
        margin: 20px auto; /* Centrer le bouton Ajouter */
    }

        .btn-add:hover {
            background-color: #006633;
        }

    .btn-primary {
        background-color: var(--biat-blue-dark); /* Bleu foncé pour le bouton Enregistrer */
        color: white;
        border: none;
        border-radius: 6px;
        padding: 12px 25px;
        font-size: 1.1em;
        cursor: pointer;
        transition: background-color 0.15s ease-in-out;
    }

        .btn-primary:hover {
            background-color: #002966;
        }

    .alert {
        padding: 15px;
        margin-bottom: 20px;
        border-radius: 6px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #f5c6cb;
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function () {
            var objectifsContainer = $('#objectifs-container');

            function addCreditObjectifRow() {
                var index = objectifsContainer.children('.objectif-bloc').length;
                var newBloc = $('<div>', { class: 'objectif-bloc' });
                newBloc.append($('<h3>', { text: 'Objectif de Crédit #' + (index + 1) }));

                // Période Select
                var periodeDiv = $('<div>', { class: 'form-group' });
                var periodeLabel = $('<label>', { for: 'Periode_' + index, text: 'Période' });
                var periodSelect = $('<select>', { class: 'form-control', id: 'Periode_' + index, name: '[' + index + '].Periode' });
        @foreach (var periode in periodes)
        {
            @:periodSelect.append($('<option>', { value: '@periode.Value', text: '@periode.Text' }));
        }
                periodeDiv.append(periodeLabel, periodSelect);
                newBloc.append(periodeDiv);

                // Type de Crédit Select
                var typeCreditDiv = $('<div>', { class: 'form-group' });
                var typeCreditLabel = $('<label>', { for: 'TypeCredit_' + index, text: 'Type de Crédit' });
                var typeCreditSelect = $('<select>', { class: 'form-control', id: 'TypeCredit_' + index, name: '[' + index + '].TypeCredit' });
        @foreach (var type in typesCredit)
        {
            @:typeCreditSelect.append($('<option>', { value: '@type.Value', text: '@type.Text' }));
        }
                typeCreditDiv.append(typeCreditLabel, typeCreditSelect);
                newBloc.append(typeCreditDiv);

                // Montant Objectif Input
                var montantDiv = $('<div>', { class: 'form-group' });
                var montantLabel = $('<label>', { for: 'MontantObjectif_' + index, text: 'Montant Objectif (TND)' });
                var montantInput = $('<input>', { type: 'number', class: 'form-control', id: 'MontantObjectif_' + index, name: '[' + index + '].MontantObjectif', required: true });
                montantDiv.append(montantLabel, montantInput);
                newBloc.append(montantDiv);

                // Employé Select (Optionnel)
                var employeDiv = $('<div>', { class: 'form-group' });
                var employeLabel = $('<label>', { for: 'EmployeId_' + index, text: 'Employé (Optionnel)' });
                var employeSelect = $('<select>', { class: 'form-control', id: 'EmployeId_' + index, name: '[' + index + '].EmployeId' });
                employeSelect.append($('<option>', { value: '', text: '-- Sélectionner --' }));
        @if (employesSelectList != null)
        {
            foreach (var employe in employesSelectList)
            {
                @:employeSelect.append($('<option>', { value: '@employe.Value', text: '@employe.Text' }));
            }
        }
                employeDiv.append(employeLabel, employeSelect);
                newBloc.append(employeDiv);

                // Groupe Select (Optionnel)
                var groupeDiv = $('<div>', { class: 'form-group' });
                var groupeLabel = $('<label>', { for: 'GroupeId_' + index, text: 'Groupe (Optionnel)' });
                var groupeSelect = $('<select>', { class: 'form-control', id: 'GroupeId_' + index, name: '[' + index + '].GroupeId' });
                groupeSelect.append($('<option>', { value: '', text: '-- Sélectionner --' }));
        @if (groupesSelectList != null)
        {
            foreach (var groupe in groupesSelectList)
            {
                @:groupeSelect.append($('<option>', { value: '@groupe.Value', text: '@groupe.Text' }));
            }
        }
                groupeDiv.append(groupeLabel, groupeSelect);
                newBloc.append(groupeDiv);

                // Bouton Supprimer
                var removeButton = $('<button>', { type: 'button', class: 'btn btn-danger btn-sm remove-objectif-btn', text: 'Supprimer' });
                removeButton.on('click', function () {
                    $(this).closest('.objectif-bloc').remove();
                    // Renuméroter les titres si nécessaire pour une meilleure UX
                    $('#objectifs-container').children('.objectif-bloc').each(function(i) {
                        $(this).find('h3').text('Objectif de Crédit #' + (i + 1));
                        $(this).find('[id^="Periode_"]').attr('id', 'Periode_' + i).attr('name', '[' + i + '].Periode');
                        $(this).find('[id^="TypeCredit_"]').attr('id', 'TypeCredit_' + i).attr('name', '[' + i + '].TypeCredit');
                        $(this).find('[id^="MontantObjectif_"]').attr('id', 'MontantObjectif_' + i).attr('name', '[' + i + '].MontantObjectif');
                        $(this).find('[id^="EmployeId_"]').attr('id', 'EmployeId_' + i).attr('name', '[' + i + '].EmployeId');
                        $(this).find('[id^="GroupeId_"]').attr('id', 'GroupeId_' + i).attr('name', '[' + i + '].GroupeId');
                    });
                });
                newBloc.append(removeButton);

                objectifsContainer.append(newBloc);
            }

            $('#ajouter-objectif').on('click', addCreditObjectifRow);

            // Ajouter un premier bloc d'objectif au chargement de la page
            addCreditObjectifRow();
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}