                    @model IEnumerable<SujetPFE.Models.ObjectifDepotViewModel>
@using Microsoft.AspNetCore.Mvc.Rendering
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Saisie des Objectifs Dépôts";
    var chargesAffaires = ViewBag.ChargesAffaires as List<SelectListItem>;
    var firstEmployeeId = Model?.FirstOrDefault()?.EmployeeId?.ToString();
}

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --accent-color: #e74c3c;
            --light-bg: #f8f9fa;
            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }

        body {
            background-color: var(--light-bg);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .main-container {
            max-width: 98%; /* Modification: plus large */
            margin: 1rem auto; /* Modification: marge réduite */
            padding: 0 10px; /* Modification: padding réduit */
        }

        .header-card {
            background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
            color: white;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
            padding: 1.5rem;
            margin-bottom: 1.5rem; /* Modification: marge réduite */
        }

        .selection-card {
            background-color: white;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
            padding: 1.5rem;
            margin-bottom: 1.5rem; /* Modification: marge réduite */
        }

        .data-table {
            background-color: white;
            border-radius: 10px;
            box-shadow: var(--card-shadow);
            overflow: hidden;
            font-size: 1.1rem;
            width: 100%; /* Modification: largeur à 100% */
        }

        .table-responsive {
            width: 100%;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
            padding: 0; /* Modification: padding supprimé */
            margin: 0; /* Modification: marge supprimée */
        }

        .table {
            width: 100%; /* Modification: largeur à 100% */
            margin: 0; /* Modification: marge supprimée */
            table-layout: auto;
        }

        .table-header {
            background: linear-gradient(135deg, var(--secondary-color), var(--primary-color));
            color: white;
            font-size: 1.2rem;
        }

        .table th {
            font-weight: 600;
            text-align: center;
            vertical-align: middle;
            white-space: nowrap;
            padding: 1rem; /* Modification: padding ajusté */
            min-width: 200px; /* Modification: largeur minimale augmentée */
        }

        .table td {
            vertical-align: middle;
            padding: 0.8rem; /* Modification: padding ajusté */
            min-width: 180px; /* Modification: largeur minimale augmentée */
        }

        .group-name {
            min-width: 300px; /* Modification: largeur augmentée */
            font-weight: bold;
        }

        /* Le reste du CSS reste inchangé */
        .form-select-lg {
            font-size: 1.2rem;
            padding: 0.8rem 1.5rem;
            border: 2px solid #e0e0e0;
            transition: var(--transition);
        }

            .form-select-lg:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
            }

        .form-select-sm, .form-control-sm {
            font-size: 1.1rem;
            padding: 0.7rem;
            border-radius: 5px;
            border: 1px solid #e0e0e0;
            transition: var(--transition);
        }

        .form-control-sm {
            width: 180px;
            text-align: right;
        }

        .btn-success {
            font-size: 1.2rem;
            padding: 0.8rem 2.5rem;
        }

        .numeric-input {
            margin: 0 auto;
        }

        .loading-spinner {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100px;
        }

        .spinner-border {
            width: 3rem;
            height: 3rem;
        }

        .empty-state {
            text-align: center;
            padding: 2rem;
            color: #7f8c8d;
        }

        .error-state {
            text-align: center;
            padding: 2rem;
            color: var(--accent-color);
        }

        @@media (max-width: 1400px) {
            .table-responsive {
                overflow-x: auto;
                -webkit-overflow-scrolling: touch;
            }
        }
    </style>
</head>
<body>
    <div class="main-container">
        <!-- Header Section -->
        <div class="header-card">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="display-5 fw-bold mb-0">
                        <i class="bi bi-graph-up me-2"></i>Saisie des Objectifs Dépôts
                    </h1>
                    <p class="mb-0 opacity-75">Gestion des objectifs financiers par groupe et par chargé d'affaires</p>
                </div>
                <a asp-action="Dashboard" class="btn btn-light btn-lg">
                    <i class="bi bi-arrow-left me-2"></i>Tableau de Bord
                </a>
            </div>
        </div>

        <!-- Selection Card -->
        <div class="selection-card">
            <div class="row align-items-center">
                <div class="col-md-3">
                    <label for="ChargeAffairesId" class="form-label fw-semibold">
                        <i class="bi bi-person-badge me-2"></i>
                        <span>Chargé d'Affaires</span>
                    </label>
                </div>
                <div class="col-md-9">
                    <select id="ChargeAffairesId" name="ChargeAffairesId" class="form-select form-select-lg">
                        <option value="">-- Sélectionnez un Chargé d'Affaires --</option>
                        @foreach (var item in chargesAffaires)
                        {
                            <option value="@item.Value" selected="@(item.Value == firstEmployeeId)">@item.Text</option>
                        }
                    </select>
                </div>
            </div>
        </div>

        <!-- Data Table -->
        <form asp-action="SaisieDepot" method="post" id="objectifs-form">
            @Html.AntiForgeryToken()
            <div class="data-table">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-header">
                            <tr>
                                <th class="group-name">Groupe</th>
                                <th>Encours 2023 DAT</th>
                                <th>Encours 2023 DAV</th>
                                <th>Encours 2024 DAT</th>
                                <th>Encours 2024 DAV</th>
                                <th>Objectif 2025 DAT</th>
                                <th>Objectif 2025 DAV</th>
                                <th>Responsable</th>
                            </tr>
                        </thead>
                        <tbody id="groupes-data">
                            @if (Model != null)
                            {
                                foreach (var item in Model)
                                {
                                    <tr>
                                        <td class="group-name">@item.GroupeLibelle</td>
                                        <td class="text-end">@Html.DisplayFor(m => item.Encours2023_TndDat)</td>
                                        <td class="text-end">@Html.DisplayFor(m => item.Encours2023_TndDav)</td>
                                        <td class="text-end">@Html.DisplayFor(m => item.Encours2024_TndDat)</td>
                                        <td class="text-end">@Html.DisplayFor(m => item.Encours2024_TndDav)</td>
                                        <td>
                                            @Html.HiddenFor(m => item.GroupeId)
                                            <div class="numeric-input">
                                                @Html.TextBoxFor(m => item.Objectif2025.MontantDat,
                                                         new { @class = "form-control form-control-sm", type = "number", step = "0.01", min = "0" })
                                            </div>
                                        </td>
                                        <td>
                                            <div class="numeric-input">
                                                @Html.TextBoxFor(m => item.Objectif2025.MontantDav,
                                                         new { @class = "form-control form-control-sm", type = "number", step = "0.01", min = "0" })
                                            </div>
                                        </td>
                                        <td>
                                            @Html.DropDownListFor(m => item.EmployeeId, chargesAffaires,
                                                     "-- Sélectionnez --", new { @class = "form-select form-select-sm" })
                                            @Html.ValidationMessageFor(m => item.EmployeeId, "", new { @class = "text-danger small d-block" })
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="8" class="empty-state">
                                        <i class="bi bi-info-circle-fill fs-1 text-primary mb-3"></i>
                                        <p class="fs-5">Veuillez sélectionner un chargé d'affaires pour afficher les données</p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Submit Button -->
            <div class="d-flex justify-content-end mt-4">
                <button type="submit" class="btn btn-success">
                    <i class="bi bi-check-circle-fill me-2"></i>Enregistrer les Objectifs
                </button>
            </div>
        </form>
    </div>

    <!-- Employees Data Storage -->
    <script id="employees-data" type="application/json">
        @Html.Raw(JsonConvert.SerializeObject(chargesAffaires))
    </script>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Configuration
            const $chargeAffairesSelect = $('#ChargeAffairesId');
            const $groupesData = $('#groupes-data');
            const employees = JSON.parse(document.getElementById("employees-data").textContent);

            // Format number with 2 decimals
            const formatNumber = (num) => num != null ? parseFloat(num).toFixed(2) : '';

            // Load groupes data
            function loadGroupesData(employeId) {
                if (!employeId) {
                    showEmptyState("Veuillez sélectionner un chargé d'affaires");
                    return;
                }

                showLoadingState();

                $.ajax({
                    url: '@Url.Action("GetGroupesData", "Objectivations")',
                    type: 'GET',
                    data: { employeId: employeId },
                    success: function (data) {
                        if (data && data.length > 0) {
                            renderGroupesTable(data);
                        } else {
                            showEmptyState("Aucun groupe trouvé pour ce chargé d'affaires");
                        }
                    },
                    error: function (xhr) {
                        console.error('Erreur:', xhr);
                        showErrorState("Erreur lors du chargement des données");
                    }
                });
            }

            // Render groupes table
            function renderGroupesTable(data) {
                let html = '';

                data.forEach((item, i) => {
                    html += `<tr>
                        <td class="group-name">${item.groupeLibelle}</td>
                        <td class="text-end">${formatNumber(item.encours2023_TndDat)}</td>
                        <td class="text-end">${formatNumber(item.encours2023_TndDav)}</td>
                        <td class="text-end">${formatNumber(item.encours2024_TndDat)}</td>
                        <td class="text-end">${formatNumber(item.encours2024_TndDav)}</td>
                        <td>
                            <div class="numeric-input">
                                <input type="hidden" name="[${i}].GroupeId" value="${item.groupeId}" />
                                <input type="number" step="0.01" min="0" class="form-control form-control-sm"
                                       name="[${i}].Objectif2025.MontantDat"
                                       value="${formatNumber(item.objectif2025?.montantDat)}" />
                            </div>
                        </td>
                        <td>
                            <div class="numeric-input">
                                <input type="number" step="0.01" min="0" class="form-control form-control-sm"
                                       name="[${i}].Objectif2025.MontantDav"
                                       value="${formatNumber(item.objectif2025?.montantDav)}" />
                            </div>
                        </td>
                        <td>
                            <select class="form-select form-select-sm" name="[${i}].EmployeeId">
                                <option value="">-- Sélectionnez --</option>
                                ${employees.map(emp =>
                                    `<option value="${emp.Value}" ${item.employeeId == emp.Value ? 'selected' : ''}>
                                        ${emp.Text}
                                    </option>`
                                ).join('')}
                            </select>
                        </td>
                    </tr>`;
                });

                $groupesData.html(html);
                initNumericInputs();
            }

            // Show loading state
            function showLoadingState() {
                $groupesData.html(`
                    <tr>
                        <td colspan="8" class="text-center py-4">
                            <div class="loading-spinner">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Chargement...</span>
                                </div>
                            </div>
                        </td>
                    </tr>
                `);
            }

            // Show empty state
            function showEmptyState(message) {
                $groupesData.html(`
                    <tr>
                        <td colspan="8" class="empty-state">
                            <i class="bi bi-database-fill-slash fs-1 text-primary mb-3"></i>
                            <p class="fs-5">${message}</p>
                        </td>
                    </tr>
                `);
            }

            // Show error state
            function showErrorState(message) {
                $groupesData.html(`
                    <tr>
                        <td colspan="8" class="error-state">
                            <i class="bi bi-exclamation-triangle-fill fs-1 mb-3"></i>
                            <p class="fs-5">${message}</p>
                            <button class="btn btn-outline-primary btn-sm mt-2" onclick="window.location.reload()">
                                <i class="bi bi-arrow-clockwise"></i> Réessayer
                            </button>
                        </td>
                    </tr>
                `);
            }

            // Initialize numeric inputs
            function initNumericInputs() {
                $('input[type="number"]').on('keydown', function(e) {
                    // Allow: backspace, delete, tab, escape, enter, decimal point
                    if ([46, 8, 9, 27, 13, 110, 190].includes(e.keyCode) ||
                        // Allow: Ctrl+A, Ctrl+C, Ctrl+V, Ctrl+X
                        (e.keyCode === 65 && e.ctrlKey === true) ||
                        (e.keyCode === 67 && e.ctrlKey === true) ||
                        (e.keyCode === 86 && e.ctrlKey === true) ||
                        (e.keyCode === 88 && e.ctrlKey === true) ||
                        // Allow: home, end, left, right
                        (e.keyCode >= 35 && e.keyCode <= 39)) {
                        return;
                    }
                    // Prevent: not a number or not a number keypad
                    if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                        e.preventDefault();
                    }
                });
            }

            // Event handlers
            $chargeAffairesSelect.on('change', function() {
                loadGroupesData($(this).val());
            });

            // Form submission
            $('#objectifs-form').on('submit', function(e) {
                $('button[type="submit"]').html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Enregistrement...');
            });

            // Initial load if employee is selected
            if ($chargeAffairesSelect.val()) {
                loadGroupesData($chargeAffairesSelect.val());
            }
        });
    </script>
</body>
</html>